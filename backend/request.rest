### Login
### — 1) REGISTER USER (kalo user ngga milih role, otomatis jadi staff)
POST http://localhost:5000/users
Content-Type: application/json

{
  "name": "dedi musafir",
  "email": "dedi21@gmail.com",
  "password": "123456",
  "confpassword": "123456",
  "role": "manager" 
}

### — 2) LOGIN (dapat accessToken & refreshToken cookie)
POST http://localhost:5000/login
Content-Type: application/json

{
  "email": "fajar.manager@gmail.com",
  "password": "admin123"
}

### — 3) REFRESH TOKEN (ambil accessToken baru)
GET http://localhost:5000/token

### — 4) LOGOUT
DELETE http://localhost:5000/logout

### — 5) GET ALL USERS (hanya user yang sudah login)
GET http://localhost:5000/users
Authorization: Bearer 
### — 6) GET ME (ambil data user yang sedang login)
GET http://localhost:5000/me
Authorization: Bearer

### CRUD
### — 1) GET ALL PRODUCTS (login required)
GET http://localhost:5000/products
Authorization: Bearer 

### — 2) GET PRODUCT BY ID
GET http://localhost:5000/products/2
Authorization: Bearer 

### — 3) CREATE PRODUCT (manager only)
POST http://localhost:5000/products
Authorization: Bearer 
Content-Type: application/json

{
  "name": "Bugatti divo",
  "model": "pur card",
  "price": 13000000,
  "description": "Mahakarya kecepatan absolut.",
  "stock": 5
}

### — 4) UPDATE PRODUCT (manager only)
PATCH  http://localhost:5000/products/5
Authorization: Bearer 
Content-Type: application/json

{
  "name": "Bugatti Bolide",
  "model": "luxury Sport",
  "price": 3250000,
  "description": "Versi terbaru dengan performa ditingkatkan.",
  "stock": 3
}

### — 5) DELETE PRODUCT (manager only)
DELETE http://localhost:5000/products/6
Authorization: Bearer 

### TRANSACTIONS
### — 1) GET ALL TRANSACTIONS (login required)
GET http://localhost:5000/transactions
Authorization: Bearer 

### — 2) GET TRANSACTION BY ID (login required)
GET http://localhost:5000/transactions/1
Authorization: Bearer 

### — 3) CREATE TRANSACTION (login required)
POST http://localhost:5000/transactions
Authorization: Bearer 
Content-Type: application/json

{
  "transaction_code": "TRX001",
  "buyer_name": "Pak Budi",
  "product_id": 2,
  "quantity": 2,
  "total_price": 26000000
}

### — 4) UPDATE TRANSACTION (login required)
PATCH http://localhost:5000/transactions/1
Authorization: Bearer 
Content-Type: application/json

{
  "buyer_name": "Ibu Sari",
  "quantity": 1,
  "total_price": 13000000
}

### — 5) DELETE TRANSACTION (login required)
DELETE http://localhost:5000/transactions/2
Authorization: Bearer 

### Test Product Keluar/Masuk
POST http://localhost:5000/inventory-movements
Authorization: Bearer 
Content-Type: application/json

{
  "product_id": 2,
  "quantity": 10,
  "type": "inbound",
  "reason": "Pembelian dari Supplier ABC",
  "location_to": "Gudang A Rak 1", 
  "notes": "Penerimaan batch baru"

}
